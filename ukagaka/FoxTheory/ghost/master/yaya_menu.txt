//******************************************************************************
// あやりりすEX　ゴーストテンプレート
// メニュー処理辞書
//******************************************************************************

//REV.20121018-1：＠メニュー追加、＠設定に仕様変更
//あやりりすだとヒアドキュメント中のさくらスクリプトに自動ウェイトが入ってしまう
//
//------------------------------------------------------------------------------
//メインメニュー展開
//------------------------------------------------------------------------------
OpenMenu
{
	"\![set,autoscroll,disable]"
	_today = GETTIME()
	--
	//メニュー：で実行する関数は引数を渡せない。(実質\qタグ)

	if (EnglishMenu == 1){
		if (PokeBust || TouchBust || Conversation_Sexual){
			"\s[324]……\n"
			"\s[353]……\n"
			"\s[63]……\n"
		}
		elseif (PokeCrotch || TouchCrotch || Conversation_Sexual){
			"\s[24]……\n"
			"\s[53]……\n"
			"\s[63]……\n"
		}
		else{
			"\s[0]"
		}
		--
		"\_q\f[name,font\Aramis Italic.ttf]\f[bold,1]Menu\f[name,font\cinecaption2.28.ttf]\f[bold,0]\n/
		\![*]\__q[Menu_AITALK]Tell me something\__q\n/
		\![*]\__q[Conversation_Begin]Conversation\__q\n/
		\![*]\__q[PhysicsNotes_Show]Tips\__q　　\![*]\__q[PhysicsCheck]Pick-up paper\__q\n/
		\__q[OpenMenu_2]\[+\]Word2Vec\__q\n/
		\![*]\__q[SilentPlease]Quiet please\__q　　\![*]\__q[Option]Option\__q\n/
		\![*]\__q[Menu_Webclap_Send]Questions\__q\n/
		\n/
		\![*]\__q[Menu_CANCEL]Cancel\__q\_q"
	}
	else{
		if (PokeBust || TouchBust || Conversation_Sexual){
			"\s[324]……\n"
			"\s[353]……\n"
		}
		elseif (PokeCrotch || TouchCrotch || Conversation_Sexual){
			"\s[24]……\n"
			"\s[53]……\n"
		}
		else{
			"\s[0]"
		}
		--
		"\_q\f[name,font\Aramis Italic.ttf]\f[bold,1]Menu\f[name,font\cinecaption2.28.ttf]\f[bold,0]\n/
		\![*]\__q[Menu_AITALK]なにか話して\__q　　\![*]\__q[Conversation_Begin]会話する\__q\n/
		\![*]\__q[PhysicsNotes_Show]物理ノート\__q　　　\![*]\__q[PhysicsCheck]論文Pick-Up\n/
		\__q[OpenMenu_2]\[+\]Word2Vec\__q\n/
		\![*]\__q[SilentPlease]静かにしてて\__q　　\![*]\__q[Option]Option\__q\n/
		\![*]\__q[Menu_Webclap_Send]拍手送信\__q\n/
		\n/
		\![*]\__q[Menu_CANCEL]なんでもない\__q\_q"
	}
	--
	if (_today[1] == 12 && _today[2] == 25 && Flag_Christmas != 1){
		//Christmas
		"\n\_q\![*]\__q[EventChristmas]Event\__q\_q"
	}
	if (_today[1] == 2 && _today[2] == 14 && Flag_Valentine != 1){
		//Valentine
		"\n\_q\![*]\__q[EventValentine]Event\__q\_q"
	}
	//ExTalkFlagInit
	--
	"\e%(TalkReading=0)"
}

Test_Exp{
	//"\![open,inputbox,OnScraping,-1,]"
	//_adress = "https://ja.wikipedia.org/wiki/"+"量子力学"
	_adress = "https://arxiv.org/search/?query=resurgence"
	//_adress = "https://nao-fox.github.io/HTML/UpdateHistory.html"
	_result = FUNCTIONEX("SAORI\\proxy_ex.dll","scraping.exe",_adress)
	_result
	//"量子力学（りょうしりきがく、英 quantum mechanics）brabrabra「hogehoge」fugafuga"
}
OnScraping{
	_input = reference[0]
	//_adress = "https://ja.wikipedia.org/wiki/"+_input
	//_adress = "https://nao-fox.github.io/"
	_adress = "https://www.aozora.gr.jp/cards/000879/files/42_15228.html"
	_result = FUNCTIONEX("SAORI\\Proxy2.dll","scraping.exe",_adress)
	_result[2,";;;"]
}

OpenMenu_2
{
	"\![set,autoscroll,disable]"
	--
	//メニュー：で実行する関数は引数を渡せない。(実質\qタグ)
	if (EnglishMenu == 1){
		"\_q\f[name,font\Aramis Italic.ttf]\f[bold,1]Menu\f[name,font\cinecaption2.28.ttf]\f[bold,0]\n/
		\![*]\__q[Menu_AITALK]Tell me something\__q\n/
		\![*]\__q[Conversation_Begin]Conversation\__q\n/
		\![*]\__q[PhysicsNotes_Show]Tips\__q　　\![*]\__q[PhysicsCheck]Pick-up paper\__q\n/
		\__q[OpenMenu]\[-\]Word2Vec\__q\n/
		\![*]\__q[ShowBooksList]with text\__q　　\![*]\__q[ShowLearnedWordsList]with Ghosts\__q\n/
		\![*]\__q[Word2Vec_begin_wiki]with wikipedia\__q\n/
		\n/
		\![*]\__q[SilentPlease]Quiet please\__q　　\![*]\__q[Option]Option\__q\n/
		\![*]\__q[Menu_Webclap]WebClap\__q\n/
		\n/
		\![*]\__q[Menu_CANCEL]Cancel\__q\_q"
	}
	else{
		"\_q\f[name,font\Aramis Italic.ttf]\f[bold,1]Menu\f[name,font\cinecaption2.28.ttf]\f[bold,0]\n/
		\![*]\__q[Menu_AITALK]なにか話して\__q　　\![*]\__q[Conversation_Begin]会話する\__q\n/
		\![*]\__q[PhysicsNotes_Show]物理ノート\__q　　　\![*]\__q[PhysicsCheck]論文pick-up\__q\n/
		\__q[OpenMenu]\[-\]Word2Vec\__q\n/
		\![*]\__q[ShowBooksList]テキストで解析\__q　　\![*]\__q[ShowLearnedWordsList]ゴーストで解析\__q\n/
		\![*]\__q[Word2Vec_begin_wiki]Wikipediaで解析\__q\n/
		\n/
		\![*]\__q[SilentPlease]静かにしてて\__q　　\![*]\__q[Option]Option\__q\n/
		\![*]\__q[Menu_Webclap]拍手送信・回答\__q\n/
		\n/
		\![*]\__q[Menu_CANCEL]なんでもない\_q"
	}
}


Markovvvv{
	/*
	まとめ

	OnMorph_Mecab2("words\mine.txt","words\output.txt")//outputに書き込まれる
	Morph_List_Create_Mecab("words\mecabmorph.txt",3,"words\outputlist.txt")
	の実行でMakeMarkovChain用のテキストファイルが作られる

	MakeMarkovChainは3行prefixのテキストを受け取って(第二引数を1にするとMorphListMecab)連鎖する
	MakeMarkovChain("words\outputlist.txt")
	*/
	//OnMorph_Mecab2("words\bookshelf\Kabukinomicon_ver1.4.txt","words\kabukiout.txt")
	//Morph_List_Create_Mecab("words\kabukiout_short.txt",3,"words\outputlist.txt")
	"\s[34]"
	--
	MakeMarkovChain("words\outputlist.txt")
}
HAtest{
	/*
	%(username), Trick or Treat!
	ふふ、何をくれるのかな？

	選択肢
	Treat
	いたずらしてほしい
	Trick xor Treat?

	え……
	リサ３５：Wanna be tricked? %(username).

	今日一日、

Trick or Treat...?
目とじ……ああ、今日はHalloweenだっけ？
ごめん、%(username)。何も用意していなかったんだけど……

選択肢
Trickを行う
何もしない

ごめんね、来年はちゃんと用意しておくよ。
……そうだ、かわりに



*/
}


Option{
	"\![set,autoscroll,disable]"
	--
	if (EnglishMenu == 1){
		"\_q\f[name,font\Aramis Italic.ttf]\f[bold,1]Option\f[name,font\cinecaption2.28.ttf]\f[bold,0]\n/
		\![*]\__q[TellName]Change your name\__q\n/
		\![*]\__q[Menu_TALKINTERVAL]Talking frequency\__q: %(TalkIntervalShow(aitalkinterval,Silence))\n/
		\![*]\__q[OnRSSTalkCheck]Allow her to talk about papers(hep-th)\__q: %(FlagChecker_Show(RSSTalk))\n/
		\![*]\__q[OtherGhostLearnCheck]Enable to learn from other ghosts\__q: %(FlagChecker_Show(GhostLearnCheck))\n/
		\![*]\__q[OnJapaneseTalkCheck]Allow Japanese talk\__q: %(FlagChecker_Show(JapaneseTalk))\n/
		\![*]\__q[OnEnglishTalkCheck]Allow English talk\__q: %(FlagChecker_Show(EnglishTalk))\n/
		\![*]\__q[OnEnglishMenuCheck]Use English Menu\__q: %(FlagChecker_Show(EnglishMenu))\n/
		\n/
		\![*]\__q[OpenMenu]Return\__q\_q"
	}
	else{
		"\_q\f[name,font\Aramis Italic.ttf]\f[bold,1]Option\f[name,font\cinecaption2.28.ttf]\f[bold,0]\n/
		\![*]\__q[TellName]名前を覚えて\__q\n/
		\![*]\__q[TellUserGender]ユーザ性別設定\__q: %(UserGenderShow())\n/
		\![*]\__q[Menu_TALKINTERVAL]ランダムトーク頻度変更\__q: %(TalkIntervalShow(aitalkinterval,Silence))\n/
		\![*]\__q[OnRSSTalkCheck]論文(hep-th)のトークを許可\__q: %(FlagChecker_Show(RSSTalk))\n/
		\![*]\__q[OtherGhostLearnCheck]他のゴーストからの学習を許可\__q: %(FlagChecker_Show(GhostLearnCheck))\n/
		\![*]\__q[OnJapaneseTalkCheck]日本語のトークを許可\__q: %(FlagChecker_Show(JapaneseTalk))\n/
		\![*]\__q[OnEnglishTalkCheck]Allow English talk\__q: %(FlagChecker_Show(EnglishTalk))\n/
		\![*]\__q[OnEnglishMenuCheck]Use English Menu\__q: %(FlagChecker_Show(EnglishMenu))\n/
		\n/
		\![*]\__q[OpenMenu]戻る\__q\_q"
	}

}
TellName{
	if (EnglishMenu == 1){
		<<"
		……？
		(Please write your name)
		">>
	}
	else{
		<<"
		……？
		(名前を入力してください)
		">>
	}

	--
	<<"
	\![open,inputbox,OnTellName,0]
	">>
}
TellUserGender{
	//0:male, 1:female
	_text = "\_qCurrent: "
	if (usergender != 1){
		_text += "Male"
	}
	else{
		_text += "Female"
	}
	_text += "\n\n\![*]\__q[OnTellUserGender]Change\__q\n\n\n\n\![*]\__q[OpenMenu]Return\__q\_q"
	_text
}
OnTellUserGender{
	if (usergender != 1){
		usergender = 1
	}
	else{
		usergender = 0
	}
	TellUserGender
}
UserGenderShow{
	if (usergender != 1){
		"Male"
	}
	else{
		"Female"
	}
}
OnTellName{
	username = reference[0]
	if (EnglishMenu == 1){
		<<"
		(Your name has been changed: %(username))
		">>
	}
	else{
		<<"
		(名前を変更しました: %(username))
		">>
	}
}


Flagchecker{
	<<"
	＠メニュー：フラグ表示(一部)|ShowFlag
	＠メニュー：つつきコマンド変更|PokeChange
	＠メニュー：本読んでて|SilentPlease
	＠改行多めメニュー：戻る|OpenMenu
	">>
}
SilentPlease{
	Silence = 1
	if (TouchBust||PokeBust||TouchCrotch||PokeCrotch){
		<<"
		リサ２０９：……本を読んでる間に変なところ触らないでよ？
		\e%(TalkReading = 1)
		">>

		<<"
		リサ２０４：……変なところ触らないでよ？
		\e%(TalkReading = 1)
		">>

		<<"
		リサ２０９：……変なことしないでね？
		\e%(TalkReading = 1)
		">>
	}
	else{
		//なぜかTalkReadingフラグが立たない…
		//上のif文内部だとOKなので謎。
		"\s[200]\e%(TalkReading = 1)"

		"\s[201]\e%(TalkReading = 1)"

		"\s[202]\e%(TalkReading = 1)"

		"\s[0]\e%(TalkReading = 0)"

		"\s[5]\e%(TalkReading = 0)"

		"\s[199]\e%(TalkReading = 0)"
	}
}

Animetest{
	<<"
	あ\f[height,20]あ\c[char,1]\f[height,16]あ\c[char,1]\f[height,12]あ\c[char,1]\f[height,8]あ
	">>
}

//------------------------------------------------------------------------------
//メニュー選択タイムアウト
//------------------------------------------------------------------------------
/*
OnChoiceTimeout
{
	<<"
	リサ００：......？
	">>
}
*/
//******************************************************************************
//各項目の処理内容
//******************************************************************************

//---- 何か話して
Menu_AITALK
{
	//---- 明示的にAIトーク開始を指示
	Silence = 0
	"\![raise,OnAITalk]"
}

//---- さっきの話は
Menu_LASTTALK
{
	//前のトークになにかある(＝文字列の長さが0ではない）時はそれを喋る
	if ( STRLEN(SHIORI3FW.LastAITalk) > 0 ) {
		SHIORI3FW.LastAITalk
	}
	else {
		<<"
		リサ０３：……さっきって？
		">>
	}
}

//---- トーク頻度の調整
Menu_TALKINTERVAL
{
	if (EnglishMenu == 1){
		<<"
		リサ００：...？
		＠メニュー：Frequently(30 sec)｜Menu_TALKFREQUENT
		＠メニュー：Normal(3 min)｜Menu_TALKNORMAL
		＠メニュー：Little(5 min)｜Menu_TALKPOOR
		＠メニュー：Silent｜Menu_TALKNONE
		＠改行多めメニュー：Return｜Option
		">>
	}
	else{
		<<"
		リサ００：……？
		＠メニュー：多め(30秒間隔)｜Menu_TALKFREQUENT
		＠メニュー：ふつう(3分間隔)｜Menu_TALKNORMAL
		＠メニュー：少なめ(5分間隔)｜Menu_TALKPOOR
		＠メニュー：黙る｜Menu_TALKNONE
		＠改行多めメニュー：戻る｜Option
		">>
	}
}


/*
//---- 名前覚えて
Menu_TELLNAME
{
	名前入力起動('メニュー')
}

//「メニュー」の部分を変えれば、他の反応にできます。
//たとえば初回起動時に名前を聞きたい場合は、初回起動反応に「名前入力起動('初回')」と書いてみるとか。

名前入力開くメニュー
{
	\![set,choicetimeout,10000000]
	<<"
	名前を入力してください。
	">>
}

名前入力空欄メニュー
{
	if 名前入力空欄カウント <= 1 {
		<<"
		リサ０４：名前変える気じゃなかったっけ？
		">>
	}
	else {
		<<"
		リサ０４：……まだ？
		">>
	}
}

名前入力敬称メニュー
{
	<<"
	リサ０４：敬称はなしでって言ったはずなんだけどな？
	">>
}

名前入力終了メニュー
{
	<<"
	リサ１５：わかった。（ユーザー）ね。
	">>
}
*/

//---- 他のゴーストと話す
Menu_GHOSTCOMSTART
{
	他に話しかける
}

//---- キャンセルされた
Menu_CANCEL
{

}

//フラグを使ったトーク頻度管理

//トーク頻度
Menu_TALKFREQUENT
{
	Silence = 0
	//---- 頻繁に話す(30秒間隔)
	aitalkinterval = 30
	--
	Option
}

Menu_TALKNORMAL
{
	Silence = 0
	//---- ふつうに話す(3分間隔)
	aitalkinterval = 180
	--
	Option
}

Menu_TALKPOOR
{
	Silence = 0
	//---- 静かに話す(5分間隔)
	aitalkinterval = 300
	--
	Option
}

Menu_TALKNONE
{
	//---- 話さない
	//aitalkinterval = 0
	Silence = 1
	--
	Option
}

TalkIntervalShow{
	_interval = _argv[0]
	_silence = _argv[1]

	if (_silence == 1){
		"silent"
	}
	else{
		if (_interval == 30){
			"frequent"
		}
		elseif (_interval == 180){
			"normal"
		}
		elseif (_interval == 300){
			"little"
		}
		else{
			"？"
		}
	}
}
